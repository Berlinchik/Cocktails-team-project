{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,4K,MCAzDC,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,wDCW9DC,SAASC,cAAc,cAC/BC,iBAAiB,QAASC,EAAAC,sBAE/BJ,SAASK,iBAAiB,oBAClCC,SAAQC,GACfA,EAAKL,iBAAiB,SAASM,IAC7B,MAAMC,EAAaC,aAAaC,QAAQ,YAClCC,EAAQZ,SAASK,iBAAiB,oBAClCQ,EAAQb,SAASK,iBAAiB,uBACxCO,EAAMN,SAAQQ,IACO,UAAfL,GAAyC,OAAfA,IAC5BK,EAAGC,UAAUC,OAAO,cACpBF,EAAGC,UAAUE,IAAI,cAEA,SAAfR,IACFK,EAAGC,UAAUC,OAAO,aACpBF,EAAGC,UAAUE,IAAI,c,IAGrBJ,EAAMP,SAAQQ,IACO,UAAfL,GAAyC,OAAfA,IAC5BK,EAAGC,UAAUC,OAAO,cACpBF,EAAGC,UAAUE,IAAI,cAEA,SAAfR,IACFK,EAAGC,UAAUC,OAAO,aACpBF,EAAGC,UAAUE,IAAI,c,GAEnB,MAIN,MAAMC,EAAoBC,IACxB,MAAMC,EAAOD,EAAQE,eACfC,EAAUH,EAAQI,eAClBrC,EAAKiC,EAAQK,aACnB,IAAIC,EACJ,MAAMhB,EAAaC,aAAaC,QAAQ,YAOxC,MANmB,UAAfF,GAAyC,OAAfA,IAC5BgB,EAAO,aAEU,SAAfhB,IACFgB,EAAO,cAEF,4HAG2BA,MAASL,+CACNK,MAASH,6CACXF,0BAA6BlC,6RAIvCwC,EAAAjC,qHAMxB,EAgDHO,SAASE,iBAAiB,oBATb,MACX,EAAAyB,EAAAC,mBACA,MAAMC,EAAgB7B,SAASC,cAAc,oBAEzC4B,GAxCuB,CAAAC,IAE3B,MAAMC,EAAgBxC,KAAKC,MAAMkB,aAAaC,QAAQ,iBACtD,GACoB,OAAlBoB,GAC6C,IAA7CA,EAAcC,oBAAoB/C,QACW,IAA7C8C,EAAcC,oBAAoB/C,OAIlC,YAFAe,SAASC,cAAc,cAAcgC,UACnC,kDAGJ,MAAMC,EAAqBH,EAAcC,oBACzC,IAAIG,EAAQ,CACVC,OAAQ,IAGVF,EAAmB5B,SAAQa,IACI,IAAzBA,EAAQK,cACVW,EAAMC,OAAOC,KAAKlB,EAAQ,KAG9B,EAAAQ,EAAAW,oBAAmBH,GACnB,MAAMI,GAAsB,EAAAZ,EAAAa,YAAWL,EAAMC,QAE7C,IAAIK,EAAU,IACd,EAAAd,EAAAe,oBACAH,EAAoBH,OAAO9B,SAAQa,IACJ,IAAzBA,EAAQK,eACViB,GAAWvB,EAAkBC,GAAQ,IAIzCW,EAAOa,UAAYF,CAAO,EAQxBG,CAAqBf,EAAc,IAMvC7B,SAASC,cAAc,iBAAiBC,iBAAiB,SAEzD,SAAgBM,GACdR,SAASC,cAAc,eAAe0C,UAAY,IAClD,EAAAhB,EAAAC,mBACA5B,SAASC,cAAc,cAAcgC,UAAY,GACjD,MAAMF,EAAgBxC,KAAKC,MAAMkB,aAAaC,QAAQ,iBAChDkC,EAAe,IAAIC,OAAOtC,EAAMuC,OAAOC,OAC7C,IAAIP,EAAU,GACVN,EAAQ,CACVC,OAAQ,IAEVL,EAAcC,oBAAoB1B,SAAQQ,IACjB,GAAnBA,EAAGU,cACDqB,EAAaI,KAAKnC,EAAGO,eAAe6B,gBACtCf,EAAMC,OAAOC,KAAKvB,E,KAIxB,EAAAa,EAAAW,oBAAmBH,GACnB,IAAIgB,GAAc,EAAAxB,EAAAa,YAAWL,EAAMC,SACnC,EAAAT,EAAAe,oBACAS,EAAYf,OAAO9B,SAAQa,IACI,IAAzBA,EAAQK,eACViB,GAAWvB,EAAkBC,GAAQ,IAGzCnB,SAASC,cAAc,oBAAoB0C,UAAYF,EAChC,IAAnBA,EAAQxD,SACVe,SAASC,cAAc,cAAcgC,UACnC,wC","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-cc1ef5b2f1db82fa.js","node_modules/@parcel/runtime-js/lib/runtime-44e7bd74d9a8b620.js","src/js/favorite-ingredients.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cuUtH\\\":\\\"favorite-ingredients.2f37e9a2.js\\\",\\\"8OQ7p\\\":\\\"icons.0ad5d55e.svg\\\",\\\"aOf5b\\\":\\\"favorite-ingredients.bac1c6c2.js\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8OQ7p\")).toString();","import IconHeart from '../images/icons.svg';\nimport { openIngredientsModal } from './modal-ingredients';\nimport './theme-switcher';\nimport './header';\nimport {\n  sliceArray,\n  resetPagination,\n  generatePagination,\n  createPagination,\n} from './pagination';\n\nconst modalIngredientsListM = document.querySelector('.card-list');\nmodalIngredientsListM.addEventListener('click', openIngredientsModal);\n\nconst switcher = document.querySelectorAll('.switcher-button');\nswitcher.forEach(item =>\n  item.addEventListener('click', event => {\n    const savedColor = localStorage.getItem('ui-theme');\n    const names = document.querySelectorAll('.card-item__name');\n    const types = document.querySelectorAll('.card-item__details');\n    names.forEach(el => {\n      if (savedColor === 'light' || savedColor === null) {\n        el.classList.remove('name-light');\n        el.classList.add('name-dark');\n      }\n      if (savedColor === 'dark') {\n        el.classList.remove('name-dark');\n        el.classList.add('name-light');\n      }\n    });\n    types.forEach(el => {\n      if (savedColor === 'light' || savedColor === null) {\n        el.classList.remove('name-light');\n        el.classList.add('name-dark');\n      }\n      if (savedColor === 'dark') {\n        el.classList.remove('name-dark');\n        el.classList.add('name-light');\n      }\n    });\n  })\n);\n\nconst renderIngredients = element => {\n  const name = element.nameIngredient;\n  const details = element.typeIngredient;\n  const id = element.idIngredient;\n  let text;\n  const savedColor = localStorage.getItem('ui-theme');\n  if (savedColor === 'light' || savedColor === null) {\n    text = 'name-dark';\n  }\n  if (savedColor === 'dark') {\n    text = 'name-light';\n  }\n  return `\n    <div class=\"cocktail-list__cocktail-item\">\n      <div class='card-item__info'>\n        <p class=\"card-item__name ${text}\">${name}</p>\n        <p class=\"card-item__details ${text}\">${details}</p>\n        <div data-ingredient-name=\"${name}\" data-ingredient-id=\"${id}\" class=\"button-wrap\">\n          <button type=\"button\" class=\"cocktail-item__learn-more js-ingredients-modal\">Learn more</button>\n          <button type=\"button\" class=\"cocktail-item__remove\">Remove\n            <svg class=\"svg\" width=\"21\" height=\"19\">\n              <use href=\"${IconHeart}#icon-heart-filled\"></use>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  `;\n};\n\nconst getRandomIngredients = htmlEl => {\n  // Todo: get data\n  const localFavorite = JSON.parse(localStorage.getItem('favoriteList'));\n  if (\n    localFavorite === null ||\n    localFavorite.favoriteIngrediants.length === 0 ||\n    localFavorite.favoriteIngrediants.length === 1\n  ) {\n    document.querySelector('.not-found').innerText =\n      \"You haven't added any favorite ingredients yet\";\n    return;\n  }\n  const favoriteIngredient = localFavorite.favoriteIngrediants;\n  let drink = {\n    drinks: [],\n  };\n\n  favoriteIngredient.forEach(element => {\n    if (element.idIngredient !== 0) {\n      drink.drinks.push(element);\n    }\n  });\n  generatePagination(drink);\n  const favoriteIngredients = sliceArray(drink.drinks);\n\n  let content = '';\n  createPagination();\n  favoriteIngredients.drinks.forEach(element => {\n    if (element.idIngredient !== 0) {\n      content += renderIngredients(element);\n    }\n  });\n\n  htmlEl.innerHTML = content;\n};\n\nconst init = () => {\n  resetPagination();\n  const ingredientsEl = document.querySelector('.ingredients__js');\n\n  if (ingredientsEl) {\n    getRandomIngredients(ingredientsEl);\n  }\n};\n\ndocument.addEventListener('DOMContentLoaded', init);\n\ndocument.querySelector('.header-input').addEventListener('input', search);\n\nfunction search(event) {\n  document.querySelector('.pagination').innerHTML = '';\n  resetPagination();\n  document.querySelector('.not-found').innerText = '';\n  const localFavorite = JSON.parse(localStorage.getItem('favoriteList'));\n  const regExprassio = new RegExp(event.target.value);\n  let content = '';\n  let drink = {\n    drinks: [],\n  };\n  localFavorite.favoriteIngrediants.forEach(el => {\n    if (el.idIngredient != 0) {\n      if (regExprassio.test(el.nameIngredient.toLowerCase())) {\n        drink.drinks.push(el);\n      }\n    }\n  });\n  generatePagination(drink);\n  let slicedArray = sliceArray(drink.drinks);\n  createPagination();\n  slicedArray.drinks.forEach(element => {\n    if (element.idIngredient !== 0) {\n      content += renderIngredients(element);\n    }\n  });\n  document.querySelector('.ingredients__js').innerHTML = content;\n  if (content.length === 0) {\n    document.querySelector('.not-found').innerText =\n      'Not found ingredient in your favorite';\n  }\n}\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$e27edc6dc33d0133$exports","URL","resolve","import","meta","url","toString","document","querySelector","addEventListener","$aJrzc","openIngredientsModal","querySelectorAll","forEach","item","event","savedColor","localStorage","getItem","names","types","el","classList","remove","add","$86410e3eb13ab2ec$var$renderIngredients","element","name","nameIngredient","details","typeIngredient","idIngredient","text","$parcel$interopDefault","$2nhTy","resetPagination","ingredientsEl","htmlEl","localFavorite","favoriteIngrediants","innerText","favoriteIngredient","drink","drinks","push","generatePagination","favoriteIngredients","sliceArray","content","createPagination","innerHTML","$86410e3eb13ab2ec$var$getRandomIngredients","regExprassio","RegExp","target","value","test","toLowerCase","slicedArray"],"version":3,"file":"favorite-ingredients.2f37e9a2.js.map"}